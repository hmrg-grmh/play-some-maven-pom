<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>...</groupId>
    <artifactId>...</artifactId>
    <version>...</version>



    <properties>
        <!-- java version -->
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <!-- compile format -->
        <compileTextFormat>UTF-8</compileTextFormat>
        <!-- scala lib -->
        <scala.version.m>2.12</scala.version.m>
        <scala.version>${scala.version.m}.13</scala.version>
        <!-- app main -->
        <mainClass>play.some.test.hm.djldemo.Run</mainClass>

        <!-- option-tool -->
        <scallop.version>4.0.1</scallop.version>
        <!-- parallel-processing-iterator-tool -->
        <scala-async.version>1.0.0-M1</scala-async.version>
        <!-- time-tool -->
        <joda-time.version>2.10.8</joda-time.version>
        <!-- plugins compiler-package -->
        <maven-compiler-plugin.version>2.3.2</maven-compiler-plugin.version>
        <maven-assembly-plugin.version>3.1.1</maven-assembly-plugin.version>
        <!-- plugins javadoc -->
        <maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
        <pegdown-doclet.version>1.3</pegdown-doclet.version>

        <xx></xx>
    </properties>



    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${compileTextFormat}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${maven-assembly-plugin.version}</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>${mainClass}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- see:
                   https://dzone.com/articles/using-markdown-syntax-javadoc
                   https://blog.csdn.net/danpu0978/article/details/106776460
                   https://maven.apache.org/plugins/maven-javadoc-plugin/
                   https://stackoverflow.com/questions/27189441/maven-javadoc-custom-doclet
                   https://mvnrepository.com/artifact/org.pegdown/pegdown
                   https://mvnrepository.com/artifact/ch.raffael.pegdown-doclet/pegdown-doclet -->
            <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-javadoc-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <doclet>ch.raffael.doclets.pegdown.PegdownDoclet</doclet>
                    <docletArtifact>
                        <!-- see:
                               https://mvnrepository.com/artifact/org.jetbrains/markdown
                               https://mvnrepository.com/artifact/org.pegdown/pegdown
                               https://github.com/Abnaxos/markdown-doclet
                               https://mvnrepository.com/artifact/ch.raffael.pegdown-doclet/pegdown-doclet
                               https://blog.csdn.net/danpu0978/article/details/106776460
                               https://markdown.com.cn/extended-syntax/footnotes.html
                               https://plugins.jetbrains.com/plugin/9840-markdown-doclet-for-idea
                               https://code.google.com/p/markdown-doclet/ -->
                        <!-- https://mvnrepository.com/artifact/ch.raffael.pegdown-doclet/pegdown-doclet -->
                        <groupId>ch.raffael.pegdown-doclet</groupId>
                        <artifactId>pegdown-doclet</artifactId>
                        <version>${pegdown-doclet.version}</version>
                    </docletArtifact>
                    <useStandardDocletOptions>true</useStandardDocletOptions>
                </configuration>
            </plugin>
        </plugins>
    </build>


    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.scala-lang/scala-library -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.scala-lang/scala-reflect -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>${scala.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- see:
               https://index.scala-lang.org/scallop/scallop/scallop
               https://github.com/scallop/scallop/wiki
               https://www.codenong.com/2315912/ -->
        <!-- https://mvnrepository.com/artifact/org.rogach/scallop -->
        <dependency>
            <groupId>org.rogach</groupId>
            <artifactId>scallop_${scala.version.m}</artifactId>
            <version>${scallop.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- see:
               https://godpan.me/2017/05/15/learning-akka-5.html
               https://github.com/scala/scala-async
               https://stackoverflow.com/questions/17178201/parallel-iterator-in-scala
               https://www.jianshu.com/p/5837de480696
               https://github.com/godpan/akka-demo/tree/master/Example_04 -->
        <!-- A DSL to enable a direct style of programming with when composing values wrapped in Scala `Futures`. -->
        <!-- https://mvnrepository.com/artifact/org.scala-lang.modules/scala-async -->
        <dependency>
            <groupId>org.scala-lang.modules</groupId>
            <artifactId>scala-async_${scala.version.m}</artifactId>
            <version>${scala-async.version}</version>
            <scope>compile</scope>
        </dependency>
        
        
        
        
    </dependencies>
</project>
